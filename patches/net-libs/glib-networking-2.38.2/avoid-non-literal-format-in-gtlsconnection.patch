From c75344e5e0620d41bc32ec6e0c9f7ac24d1135cc Mon Sep 17 00:00:00 2001
From: Ryan Lortie <desrt@desrt.ca>
Date: Sun, 8 Dec 2013 15:26:15 -0500
Subject: [PATCH] GTlsConnection: avoid non-literal format strings

The error handling in GTlsConnection involved translated format strings
that were then passed to another function where the arguments were
applied.  This prevents the C compiler from enforcing restrictions on
the format string and runs afoul of -Werror=format-nonliteral, breaking
the build under clang.

Fix it up so that the error handling function takes the format string
along with the argument and calls g_error_new_valist().  This allows the
compiler to check that we're getting it right.

https://bugzilla.gnome.org/show_bug.cgi?id=720081
---
 tls/gnutls/gtlsconnection-gnutls.c | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

diff --git a/tls/gnutls/gtlsconnection-gnutls.c b/tls/gnutls/gtlsconnection-gnutls.c
index ae81a82..eee7715 100644
--- a/tls/gnutls/gtlsconnection-gnutls.c
+++ b/tls/gnutls/gtlsconnection-gnutls.c
@@ -21,6 +21,7 @@
 #include "glib.h"
 
 #include <errno.h>
+#include <stdarg.h>
 #include <gnutls/gnutls.h>
 #include <gnutls/x509.h>
 
@@ -665,12 +666,13 @@ begin_gnutls_io (GTlsConnectionGnutls  *gnutls,
     }
 }
 
-static int
+G_GNUC_PRINTF(5, 6) static int
 end_gnutls_io (GTlsConnectionGnutls  *gnutls,
 	       GIOCondition           direction,
 	       int                    status,
-	       const char            *errmsg,
-	       GError               **error)
+               GError               **error,
+               const char            *err_fmt,
+               ...)
 {
   GError *my_error = NULL;
 
@@ -781,8 +783,11 @@ end_gnutls_io (GTlsConnectionGnutls  *gnutls,
 
   if (error)
     {
-      g_set_error (error, G_TLS_ERROR, G_TLS_ERROR_MISC,
-                   errmsg, gnutls_strerror (status));
+      va_list ap;
+
+      va_start (ap, err_fmt);
+      *error = g_error_new_valist (G_TLS_ERROR, G_TLS_ERROR_MISC, err_fmt, ap);
+      va_end (ap);
     }
   return status;
 }
@@ -792,7 +797,7 @@ end_gnutls_io (GTlsConnectionGnutls  *gnutls,
   do {
 
 #define END_GNUTLS_IO(gnutls, direction, ret, errmsg, err)		\
-  } while ((ret = end_gnutls_io (gnutls, direction, ret, errmsg, err)) == GNUTLS_E_AGAIN);
+  } while ((ret = end_gnutls_io (gnutls, direction, ret, err, errmsg, gnutls_strerror(ret))) == GNUTLS_E_AGAIN);
 
 gboolean
 g_tls_connection_gnutls_check (GTlsConnectionGnutls  *gnutls,
-- 
1.8.4.2